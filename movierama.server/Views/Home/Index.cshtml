@using Microsoft.AspNetCore.Identity
@using Movierama.Server.Database
@model List<Movierama.Server.Models.MovieViewModel>
@inject SignInManager<ApplicationIdentityUser> SignInManager
@{
    ViewData["Title"] = "MovieRama";
}

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {

            // end of page detection
            $(window).scroll(function () {
                if ($(window).scrollTop() + $(window).height() - 20 >= $(document).height()) {
                    alert("End of page ...");
                }
            });

            // review click
            $('.review-movie').click(function (event) {
                event.preventDefault();
                likeBehavior = event.target.id.startsWith("Like");
                $.ajax({
                    url: '/api/review',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    type: 'GET',
                    data: { movieId: 5, like: true },
                    success: function (data, textStatus, xhr) {
                        console.log('review send ...');

                        if (likeBehavior) {
                            // hide hate group
                            // show Like_Description element
                            // hide like button
                            // show unlide button
                        }
                        else {
                            // hide hate group
                        }
                        document.getElementById(event.target.id).hidden = true;
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(errorThrown);
                    }
                });
                return false;
            });
        });
    </script>
}
<!-- Search Bar -->
<div class="d-flex alert alert-primary" role="alert">
    <div>Sort by :</div>
    <div>&nbsp</div>
    <div>&nbsp</div>
    <div><a href="#SortByPublicationDate">Publication Date</a></div>
    <div>&nbsp</div>
    <div>&nbsp</div>
    <div><a href="#SortByLikes">Likes</a></div>
    <div>&nbsp</div>
    <div>&nbsp</div>
    <div><a href="#SortByLikes">Hates</a></div>
</div>
<!-- Search Results -->
@foreach (var movieViewModel in Model)
{
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">@movieViewModel.Title</h5>

            <p class="card-text">Posted by: @movieViewModel.OwnerFullName @movieViewModel.DaysPublished days ago</p>

            <p class="card-text">@movieViewModel.Description</p>

            <div class="d-flex">
                <div><h7 class="flex-grow-1">@movieViewModel.LikeCount Likes</h7></div>
                <div>&nbsp</div>
                <div>&nbsp</div>
                <div><h7 class="flex-grow-1">@movieViewModel.HateCount Hates</h7></div>
                <div>&nbsp</div>
                <div>&nbsp</div>
                @if (SignInManager.IsSignedIn(User))
                {
                    <div id="LikeGroup_@movieViewModel.Id" class="d-flex">
                        <div><h7><a id="Like_@movieViewModel.Id" class="review-movie" href="#Like">Like</a></h7></div>
                        <div><h7><a id="Unlike_@movieViewModel.Id" class="review-movie" href="#Like">Unlike</a></h7></div>
                        <div id="Like_Description_@movieViewModel.Id"><p>You like this movie ...</p></div>
                        <div>&nbsp</div>
                    </div>
                    <div id="HateGroup_@movieViewModel.Id" class="d-flex">
                        <div>&nbsp</div>
                        <div><h7><a id="Hate_@movieViewModel.Id" class="review-movie" href="#Hate">Hate</a></h7></div>
                        <div><h7><a id="Unhate_@movieViewModel.Id" class="review-movie" href="#Hate">Unhate</a></h7></div>
                        <div id="Hate_Description_@movieViewModel.Id"><p>You hate this movie ...</p></div>
                    </div>
                }
            </div>
        </div>
    </div>
}
