@using Microsoft.AspNetCore.Identity
@using Movierama.Server.Database
@using Movierama.Server.Models
@model IEnumerable<Movierama.Server.Models.MovieModel>
@inject SignInManager<ApplicationIdentityUser> SignInManager
@{
    ViewData["Title"] = "MovieRama";
}

@section Scripts {
    <script type="text/javascript">

        function adjustReviewButtonsVisibility(reviewOpinion, movieId) {

            document.getElementById("Hate_" + movieId.toString()).hidden = reviewOpinion != 'Neutral';
            document.getElementById("Unhate_" + movieId.toString()).hidden = reviewOpinion != 'Hate';
            document.getElementById("Hate_Description_" + movieId.toString()).hidden = reviewOpinion != 'Hate';

            document.getElementById("Like_" + movieId.toString()).hidden = reviewOpinion != 'Neutral';
            document.getElementById("Unlike_" + movieId.toString()).hidden = reviewOpinion != 'Like';
            document.getElementById("Like_Description_" + movieId.toString()).hidden = reviewOpinion != 'Like';
        }

        $(document).ready(function () {

            // end of page detection
            $(window).scroll(function () {
                if ($(window).scrollTop() + $(window).height() + 20 >= $(document).height()) {
                    alert("End of page ...");
                }
            });

            // review click
            $('.review-movie').click(function (event) {

                event.preventDefault();
                movieId = event.target.id.toString().split('_')[1];
                reviewAction = event.target.id.toString().split('_')[0];

                reviewOpinion = 'Neutral'
                if (reviewAction == 'Like') reviewOpinion = 'Like'
                if (reviewAction == 'Hate') reviewOpinion = 'Hate'

                $.ajax({
                    url: '/api/review',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    type: 'GET',
                    data: { movieId: movieId, reviewAction: reviewAction },
                    success: function (data, textStatus, xhr) {
                        adjustReviewButtonsVisibility(reviewOpinion, movieId);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(errorThrown);
                    }
                });
                return false;
            });
        });
    </script>
}

@functions{
    public string HiddenAttribute(string element, ReviewOpinion opinion)
    {
        bool shouldBeHidden = false;

        switch (element)
        {
            case "Hate":
            case "Like":
                shouldBeHidden = opinion != ReviewOpinion.Neutral;
                break;

            case "Unhate":
            case "Hate_Description":
                shouldBeHidden = opinion != ReviewOpinion.Hate;
                break;

            case "Unlike":
            case "Like_Description":
                shouldBeHidden = opinion != ReviewOpinion.Like;
                break;
        }

        if (shouldBeHidden)
            return "hidden";

        return string.Empty;
    }
}

<div class="row">
    <div class="col-md-9">
        <!-- Search Bar -->
        <div class="d-flex alert alert-primary" role="alert">
            <div>Sort by :</div>
            <div>&nbsp</div>
            <div>&nbsp</div>
            <div id="SortByPublicationDate"><a href="#SortByPublicationDate">Publication Date</a></div>
            <div>&nbsp</div>
            <div>&nbsp</div>
            <div id="SortByLikes"><a href="#SortByLikes">Likes</a></div>
            <div>&nbsp</div>
            <div>&nbsp</div>
            <div id="SortByHates"><a href="#SortByHates">Hates</a></div>
        </div>
        <!-- Search Results -->
        @foreach (var movieViewModel in Model)
        {
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@movieViewModel.Title</h5>

                    <p class="card-text">Posted by: @movieViewModel.OwnerFullName @movieViewModel.PublicationDuration @movieViewModel.UnitOfPulicationDuration ago</p>

                    <p class="card-text">@movieViewModel.Description</p>

                    <div class="d-flex">
                        <div><h7 class="flex-grow-1">@movieViewModel.LikeCount Likes</h7></div>
                        <div>&nbsp</div>
                        <div>&nbsp</div>
                        <div><h7 class="flex-grow-1">@movieViewModel.HateCount Hates</h7></div>
                        <div>&nbsp</div>
                        <div>&nbsp</div>

                        @if (SignInManager.IsSignedIn(User) && @movieViewModel.CanReview)
                        {
                            <div><h7><a @this.HiddenAttribute("Like", @movieViewModel.ReviewOpinion) id="Like_@movieViewModel.Id" class="review-movie" href="#Like">Like</a></h7></div>
                            <div><h7><a @this.HiddenAttribute("Unlike", @movieViewModel.ReviewOpinion) id="Unlike_@movieViewModel.Id" class="review-movie" href="#Like">Unlike</a></h7></div>
                            <div @this.HiddenAttribute("Like_Description", @movieViewModel.ReviewOpinion) id="Like_Description_@movieViewModel.Id"><p>You like this movie ...</p></div>
                            <div>&nbsp</div>
                            <div>&nbsp</div>
                            <div><h7><a @this.HiddenAttribute("Hate", @movieViewModel.ReviewOpinion) id="Hate_@movieViewModel.Id" class="review-movie" href="#Hate">Hate</a></h7></div>
                            <div><h7><a @this.HiddenAttribute("Unhate", @movieViewModel.ReviewOpinion) id="Unhate_@movieViewModel.Id" class="review-movie" href="#Hate">Unhate</a></h7></div>
                            <div @this.HiddenAttribute("Hate_Description", @movieViewModel.ReviewOpinion) id="Hate_Description_@movieViewModel.Id"><p>You hate this movie ...</p></div>
                        }
                    </div>
                </div>
            </div>
        }

    </div>
    <div class="col-md-3">
        @if (SignInManager.IsSignedIn(User))
        {
            <p>
                <a class="btn btn-success" asp-action="Create">New Movie</a>
            </p>
        }
    </div>
</div>
